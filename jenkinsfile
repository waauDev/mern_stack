pipeline {
    agent any
    
    tools {
        nodejs 'node18'
    }
    
    environment {
		DOCKER_HUB_CREDENTIALS_ID = 'jen-dockerhub'
		DOCKER_HUB_REPO_FRONT = 'mineacuna/mern_stack-frontend'
        DOCKER_HUB_REPO_BACK = 'mineacuna/mern_stack-backend'
	}
    options {
        timeout(time: 10, unit: 'MINUTES')
    }
    
    stages {
        stage('Checkout') {
            steps {
                echo 'Descargando código del repositorio...'
                git branch: 'main', 
                    url: 'https://github.com/waauDev/mern_stack.git'
                
                echo 'Código descargado. Verificando estructura:'
                bat 'dir'
            }
        }

        stage('Instala depedencias backend') {
            steps {
                echo 'Instalando dependencias del backend (src)...'
                bat 'cd src && npm i'
            }
        }

         stage('test de backend') {
            steps {
                echo 'Haciendo test de backend'
                bat 'cd src && npm test'
            }
        }

        
        stage('Instalar  Dependencias cliente') {
            steps {
                echo 'Instalando dependencias del frontend (client)...'
                bat 'cd client && npm i'
            }
        }

         stage('test de frontend') {
            steps {
                echo 'test frontend'
                bat 'cd client && npm test'
            }
        }

        stage('Build Docker Imagen de backend'){
			steps {
				script {
					dockerImageBack = docker.build("${DOCKER_HUB_REPO_BACK}:latest", "src")

				}
			}
		}

        stage('Build Docker Imagen de frontend'){
			steps {
				script {
					 dockerImageFront = docker.build("${DOCKER_HUB_REPO_FRONT}:latest", "client")

				}
			}
		}
        stage('Push backend a DockerHub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKER_HUB_CREDENTIALS_ID}") {
                        dockerImageBack.push('latest')
                    }
                }
            }
        }
        stage('Push frontend a DockerHub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', "${DOCKER_HUB_CREDENTIALS_ID}") {
                        dockerImageFront.push('latest')
                    }
                }
            }
        }

        stage('Install Kubectl') {
            steps {
        bat '''
        curl -Lo kubectl.exe https://dl.k8s.io/release/v1.30.1/bin/windows/amd64/kubectl.exe
        mkdir "%ProgramFiles%\\kubectl"
        move kubectl.exe "%ProgramFiles%\\kubectl\\kubectl.exe"
        setx PATH "%PATH%;%ProgramFiles%\\kubectl"
        '''
            }
        }

      stage('Borra todo lo que haya '){
			steps {
				script {
					kubeconfig(caCertificate: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJMU1EVXdNVEl6TWpreU4xb1hEVE0xTURRek1ESXpNamt5TjFvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHBJCkFDb3NNR3FXVVlCYnpoTUV6TDJSMy9za3dlczdPK1pDYkRLQlphWFg3azhKVVhqVzJqdWxZblNFL2ROWkpVZmkKbkJiQ1Nrb2V1VVpSdXhRNWwzaVFxODVINWFBM0YrQjFkRHZaL2gxb05McGxGNTVBM0xDYnc2d3QrQzAwZmpRWQpCMC9WRTBoSXBUcHV2MEVZNW5Rc0x5MlcrMW5UdHgyU2d4SWloUXJxQ3E5MTY0VmE5a1F0OCtXQ3diVEZ0cW9YCmU0U243K1IvK2Q2NVNmWXY4cWFZSzh5dFRjdEtJdWdEbStmWHJqQTFJYnoxcDdQZzE4QlNtOFJ6ZE9WbklqUEsKdk93cnNFZ0EySit5SG1TWnlRM2t4RGFpRXlhbGp1cXlxSFlnS0FnMzRxdGxQK0hPTVVZWG5DcEk5L3pDV3ZHSwpJZjZ6NDJxb09kdEZYWUxTLzFNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUdW56cGt3SjkrODhnaGxTQWZseEp6QnFFNFJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjWFkxSEZCNQpiU3I1d2Qza0VVV2JFM211c1ovRnFZZ0NPcVN6N3JFbEpJTHRHMXFRM0IxaXdMUDRwaXlCRmxYZjNWckRjSUh3CmtjY2Jiajl5OUpOL2RaN3UyQWV1N0dJZkQxNll3RHp4VFhEOHVWdnpJNDdTNE14cDVHS2hycmdMNk02UExrT3gKa1ZyKytQVzVWOU1MenlkVlBGNXYxaEl2V29RK1JFZ1VnbnlDeXRxOEFoTldCUkZMcDhWUUo1VVZlVU5XWEorTgpWckNpRjZTS0VJcXpzVTYrYXNiSFNaeHJlNmdmcFFBWUxTODVZTlBFZFV6VXQ3d1JnelFFcWErZnMxVEVUNEFwCjhkQ2lXazJoYTgvRCtuT2I2SmVma2xvS3dJQ3pEbDVNdzE1VWdGcUNoS0NBL0VvZllhcllqZW1laDNNV215WDAKN3lYZjEvY2R4L24wT1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==', credentialsId: 'kubeconfig', serverUrl: 'https://127.0.0.1:51241'){
                         						 bat 'kubectl delete all --all'
					}
				}
			}
		}
        stage('Deploy to Kubernetes secret'){
			steps {
				script {
					kubeconfig(caCertificate: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJMU1EVXdNVEl6TWpreU4xb1hEVE0xTURRek1ESXpNamt5TjFvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHBJCkFDb3NNR3FXVVlCYnpoTUV6TDJSMy9za3dlczdPK1pDYkRLQlphWFg3azhKVVhqVzJqdWxZblNFL2ROWkpVZmkKbkJiQ1Nrb2V1VVpSdXhRNWwzaVFxODVINWFBM0YrQjFkRHZaL2gxb05McGxGNTVBM0xDYnc2d3QrQzAwZmpRWQpCMC9WRTBoSXBUcHV2MEVZNW5Rc0x5MlcrMW5UdHgyU2d4SWloUXJxQ3E5MTY0VmE5a1F0OCtXQ3diVEZ0cW9YCmU0U243K1IvK2Q2NVNmWXY4cWFZSzh5dFRjdEtJdWdEbStmWHJqQTFJYnoxcDdQZzE4QlNtOFJ6ZE9WbklqUEsKdk93cnNFZ0EySit5SG1TWnlRM2t4RGFpRXlhbGp1cXlxSFlnS0FnMzRxdGxQK0hPTVVZWG5DcEk5L3pDV3ZHSwpJZjZ6NDJxb09kdEZYWUxTLzFNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUdW56cGt3SjkrODhnaGxTQWZseEp6QnFFNFJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjWFkxSEZCNQpiU3I1d2Qza0VVV2JFM211c1ovRnFZZ0NPcVN6N3JFbEpJTHRHMXFRM0IxaXdMUDRwaXlCRmxYZjNWckRjSUh3CmtjY2Jiajl5OUpOL2RaN3UyQWV1N0dJZkQxNll3RHp4VFhEOHVWdnpJNDdTNE14cDVHS2hycmdMNk02UExrT3gKa1ZyKytQVzVWOU1MenlkVlBGNXYxaEl2V29RK1JFZ1VnbnlDeXRxOEFoTldCUkZMcDhWUUo1VVZlVU5XWEorTgpWckNpRjZTS0VJcXpzVTYrYXNiSFNaeHJlNmdmcFFBWUxTODVZTlBFZFV6VXQ3d1JnelFFcWErZnMxVEVUNEFwCjhkQ2lXazJoYTgvRCtuT2I2SmVma2xvS3dJQ3pEbDVNdzE1VWdGcUNoS0NBL0VvZllhcllqZW1laDNNV215WDAKN3lYZjEvY2R4L24wT1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==', credentialsId: 'kubeconfig', serverUrl: 'https://127.0.0.1:51241'){
                         						 bat 'kubectl apply -f k8s\\secret.yaml'
					}
				}
			}
		}

        stage('Deploy to Kubernetes backend'){
			steps {
				script {
					kubeconfig(caCertificate: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJMU1EVXdNVEl6TWpreU4xb1hEVE0xTURRek1ESXpNamt5TjFvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHBJCkFDb3NNR3FXVVlCYnpoTUV6TDJSMy9za3dlczdPK1pDYkRLQlphWFg3azhKVVhqVzJqdWxZblNFL2ROWkpVZmkKbkJiQ1Nrb2V1VVpSdXhRNWwzaVFxODVINWFBM0YrQjFkRHZaL2gxb05McGxGNTVBM0xDYnc2d3QrQzAwZmpRWQpCMC9WRTBoSXBUcHV2MEVZNW5Rc0x5MlcrMW5UdHgyU2d4SWloUXJxQ3E5MTY0VmE5a1F0OCtXQ3diVEZ0cW9YCmU0U243K1IvK2Q2NVNmWXY4cWFZSzh5dFRjdEtJdWdEbStmWHJqQTFJYnoxcDdQZzE4QlNtOFJ6ZE9WbklqUEsKdk93cnNFZ0EySit5SG1TWnlRM2t4RGFpRXlhbGp1cXlxSFlnS0FnMzRxdGxQK0hPTVVZWG5DcEk5L3pDV3ZHSwpJZjZ6NDJxb09kdEZYWUxTLzFNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUdW56cGt3SjkrODhnaGxTQWZseEp6QnFFNFJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjWFkxSEZCNQpiU3I1d2Qza0VVV2JFM211c1ovRnFZZ0NPcVN6N3JFbEpJTHRHMXFRM0IxaXdMUDRwaXlCRmxYZjNWckRjSUh3CmtjY2Jiajl5OUpOL2RaN3UyQWV1N0dJZkQxNll3RHp4VFhEOHVWdnpJNDdTNE14cDVHS2hycmdMNk02UExrT3gKa1ZyKytQVzVWOU1MenlkVlBGNXYxaEl2V29RK1JFZ1VnbnlDeXRxOEFoTldCUkZMcDhWUUo1VVZlVU5XWEorTgpWckNpRjZTS0VJcXpzVTYrYXNiSFNaeHJlNmdmcFFBWUxTODVZTlBFZFV6VXQ3d1JnelFFcWErZnMxVEVUNEFwCjhkQ2lXazJoYTgvRCtuT2I2SmVma2xvS3dJQ3pEbDVNdzE1VWdGcUNoS0NBL0VvZllhcllqZW1laDNNV215WDAKN3lYZjEvY2R4L24wT1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==', credentialsId: 'kubeconfig', serverUrl: 'https://127.0.0.1:51241'){
                         						 bat 'kubectl apply -f k8s\\backend_deployment.yaml'
					}
				}
			}
		}

        stage('Deploy to Kubernetes frontend'){
			steps {
				script {
					kubeconfig(caCertificate: 'LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURCakNDQWU2Z0F3SUJBZ0lCQVRBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwdGFXNXAKYTNWaVpVTkJNQjRYRFRJMU1EVXdNVEl6TWpreU4xb1hEVE0xTURRek1ESXpNamt5TjFvd0ZURVRNQkVHQTFVRQpBeE1LYldsdWFXdDFZbVZEUVRDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHBJCkFDb3NNR3FXVVlCYnpoTUV6TDJSMy9za3dlczdPK1pDYkRLQlphWFg3azhKVVhqVzJqdWxZblNFL2ROWkpVZmkKbkJiQ1Nrb2V1VVpSdXhRNWwzaVFxODVINWFBM0YrQjFkRHZaL2gxb05McGxGNTVBM0xDYnc2d3QrQzAwZmpRWQpCMC9WRTBoSXBUcHV2MEVZNW5Rc0x5MlcrMW5UdHgyU2d4SWloUXJxQ3E5MTY0VmE5a1F0OCtXQ3diVEZ0cW9YCmU0U243K1IvK2Q2NVNmWXY4cWFZSzh5dFRjdEtJdWdEbStmWHJqQTFJYnoxcDdQZzE4QlNtOFJ6ZE9WbklqUEsKdk93cnNFZ0EySit5SG1TWnlRM2t4RGFpRXlhbGp1cXlxSFlnS0FnMzRxdGxQK0hPTVVZWG5DcEk5L3pDV3ZHSwpJZjZ6NDJxb09kdEZYWUxTLzFNQ0F3RUFBYU5oTUY4d0RnWURWUjBQQVFIL0JBUURBZ0trTUIwR0ExVWRKUVFXCk1CUUdDQ3NHQVFVRkJ3TUNCZ2dyQmdFRkJRY0RBVEFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVcKQkJUdW56cGt3SjkrODhnaGxTQWZseEp6QnFFNFJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFjWFkxSEZCNQpiU3I1d2Qza0VVV2JFM211c1ovRnFZZ0NPcVN6N3JFbEpJTHRHMXFRM0IxaXdMUDRwaXlCRmxYZjNWckRjSUh3CmtjY2Jiajl5OUpOL2RaN3UyQWV1N0dJZkQxNll3RHp4VFhEOHVWdnpJNDdTNE14cDVHS2hycmdMNk02UExrT3gKa1ZyKytQVzVWOU1MenlkVlBGNXYxaEl2V29RK1JFZ1VnbnlDeXRxOEFoTldCUkZMcDhWUUo1VVZlVU5XWEorTgpWckNpRjZTS0VJcXpzVTYrYXNiSFNaeHJlNmdmcFFBWUxTODVZTlBFZFV6VXQ3d1JnelFFcWErZnMxVEVUNEFwCjhkQ2lXazJoYTgvRCtuT2I2SmVma2xvS3dJQ3pEbDVNdzE1VWdGcUNoS0NBL0VvZllhcllqZW1laDNNV215WDAKN3lYZjEvY2R4L24wT1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==', credentialsId: 'kubeconfig', serverUrl: 'https://127.0.0.1:51241'){
                         						 bat 'kubectl apply -f k8s\\client_deployment.yaml'
					}
				}
			}
		}

        


       

         
    }
    post {
		success {
			echo 'Build&Deploy completado correctamente!'
		}
		failure {
			echo 'Build&Deploy failed. Check logs.'
		}
	}
}